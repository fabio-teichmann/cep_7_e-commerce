name: Deploy Dev Environment

on:
  workflow_dispatch:

jobs:
  build-infra:
    runs-on: ubuntu-latest
    steps: 
    - name: checkout
      uses: actions/checkout@v4
    
    - name: setup-terraform
      uses: hashicorp/setup-terraform@v3

    - name: authenticate-to-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.TF_AWS_REGION }}
        aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}

    - name: download backend.config
      run: |
        aws s3 cp s3://cep-7-static/terraform/backend/backend.config ./terraform/environments/dev/backend.config
        
    - name: init-and-validate
      id: tf_apply
      working-directory: terraform/environments/dev/
      run: |
        terraform init -backend-config=backend.config
        terraform validate
        terraform apply -auto-approve \
          -var="image_repo=${{ vars.ECR_REPO }}"
        # terraform output -json > tf-outputs.json
    
    - name: outputs to github env 
      id: tf-outputs 
      run: |
        echo "KINESIS_STREAM_NAME=$(terraform output -raw kinesis_stream_name)" >> $GITHUB_ENV
        echo "EKS_CLUSTER_NAME=$(terraform output -raw eks_cluster_name)" >> $GITHUB_ENV

    # - name: upload-artifact
    #   uses: actions/upload-artifact
    #   with:
    #     name: tf-outputs
    #     path: ./tf-outputs.json

  # build-image:
  #   needs: [build-infra]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout

  #   # - name: download-artifact
  #   #   uses: actions/download-artifact
  #   #   with:
  #   #     name: tf-outputs

  #   # - name: extract-env-vars
  #   #   id: extract
  #   #   run: |
  #   #     KINESIS_STREAM_NAME=$(jq -r '.kinesis_stream_name' tf-outputs.json)
  #   #     echo "extracted value: $KINESIS_STREAM_NAME"
  #   #     echo "KINESIS_STREAM_NAME=$KINESIS_STREAM_NAME" >> "$GITHUB_OUTPUT"

  #   - name: log-in-docker-hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ vars.DOCKERHUB_USER }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
    
  #   - name: Build and push
  #     uses: docker/build-push-action@v6
  #     with:
  #       # build-args: |
  #       #   KINESIS_STREAM_NAME=${{ steps.extract.outputs.KINESIS_STREAM_NAME}}
  #       #   LOGFIRE_URL=${{ vars.LOGFIRE_URL }}
  #       #   LOGFIRE_TOKEN=${{ secrets.LOGFIRE_TOKEN }}
  #       context: ./src/webshop/
  #       push: true
  #       tags: ${{ vars.DOCKERHUB_USER }}/webshop:latest

  deploy-app:
    needs: [build-infra]
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4

    # - name: extract-env-vars
    #   id: extract
    #   run: |
    #     eks_cluster_name=$(jq -r '.eks_cluster_name' tf-outputs.json)
    #     echo "extracted value: $eks_cluster_name"
    #     echo "eks_cluster_name=$eks_cluster_name" >> "$GITHUB_OUTPUT"
    
    - name: authenticate-to-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.TF_AWS_REGION }}
        aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
    
    - name: Set up kubeconfig for EKS
      run: |
        aws eks update-kubeconfig \
          --region ${{ vars.TF_AWS_REGION }} \
          --name $EKS_CLUSTER_NAME

    - name: Helm deploy
      run: |
        helm upgrade --install webshop ./helm-charts/webshop \
          --set image.repository=${{ vars.DOCKERHUB_USER }}/webshop
          --set env.kinesisStreamName=$KINESIS_STREAM_NAME \
          --set env.logfireUrl=${{ vars.LOGFIRE_URL }} \
          --set secrets.logfireToken=${{ secrets.LOGFIRE_TOKEN}}
    
    