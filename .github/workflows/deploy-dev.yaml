name: (2) Deploy Dev Environment

on:
  workflow_dispatch:

jobs:
  build-infra:
    runs-on: ubuntu-latest
    steps: 
    - name: checkout
      uses: actions/checkout@v4
    
    - name: setup-terraform
      uses: hashicorp/setup-terraform@v3

    - name: authenticate-to-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.TF_AWS_REGION }}
        aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}

    - name: download backend.config
      run: |
        aws s3 cp s3://cep-7-static/terraform/backend/backend.config ./terraform/environments/dev/backend.config
        
    - name: init-and-validate
      id: tf_apply
      working-directory: terraform/environments/dev/
      run: |
        terraform init -backend-config=backend.config
        terraform validate
        terraform apply -auto-approve \
          -var="image_repo=${{ vars.ECR_REPO }}"
        terraform output -json > tf-outputs.json
    
    - name: outputs to github env 
      id: tf-outputs 
      working-directory: terraform/environments/dev/
      run: |
        echo "KINESIS_STREAM_NAME=$(terraform output -raw kinesis_stream_name)" >> $GITHUB_OUTPUT
        echo "EKS_CLUSTER_NAME=$(terraform output -raw eks_cluster_name)" >> $GITHUB_OUTPUT
        echo "ClusterName -- ${{ steps.tf-outputs.outputs.EKS_CLUSTER_NAME }}"

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: tf-outputs
        path: ./terraform/environments/dev/tf-outputs.json

  deploy-app:
    needs: [build-infra]
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: download-artifact
      uses: actions/download-artifact@v4
      with:
        name: tf-outputs

    - name: see artifact
      run: |
        echo cat tf-outputs.json

    - name: extract-env-vars
      id: extract
      run: |
        eks_cluster_name=$(jq -r '.eks_cluster_name.value' tf-outputs.json)
        echo "extracted value: $eks_cluster_name"
        echo "eks_cluster_name=$eks_cluster_name" >> "$GITHUB_OUTPUT"

        kinesis_stream_name=$(jq -r '.kinesis_stream_name.value' tf-outputs.json)
        echo "extracted value: $kinesis_stream_name"
        echo "kinesis_stream_name=$kinesis_stream_name" >> "$GITHUB_OUTPUT"
    
    - name: authenticate-to-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.TF_AWS_REGION }}
        aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
    
    - name: Set up kubeconfig for EKS
      run: |
        echo "ClusterName -- ${{ needs.tf-outputs.outputs.EKS_CLUSTER_NAME }}"
        echo "ClusterName -- ${{ steps.extract.outputs.eks_cluster_name }}"
        aws eks update-kubeconfig \
          --region ${{ vars.TF_AWS_REGION }} \
          --name ${{ steps.extract.outputs.eks_cluster_name }}

    - name: Helm deploy
      run: |
        helm upgrade --install webshop ./helm-charts/webshop \
          --set image.repository=${{ vars.DOCKERHUB_USER }}/webshop \
          --set env.kinesisStreamName=${{ steps.extract.outputs.kinesis_stream_name }} \
          --set env.logfireUrl=${{ vars.LOGFIRE_URL }} \
          --set secrets.logfireToken=${{ secrets.LOGFIRE_TOKEN}}
    
    